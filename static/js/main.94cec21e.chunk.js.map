{"version":3,"sources":["types/TodoStatus.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoStatus","TodoList","todos","selectedTodoId","setSelectedTodoId","className","map","todo","cn","id","completed","title","type","onClick","TodoFilter","query","setQuery","todoStatusFilter","setTodoStatusFilter","value","onChange","event","target","Object","values","status","toUpperCase","slice","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","handleClosing","useState","todoUser","setTodoUser","useEffect","userId","user","href","name","App","visibleTodos","setVisibleTodos","All","error","setError","isLoading","setLoading","filteredTodos","Active","filter","Complited","Error","lowerQuery","toLowerCase","trim","includes","catch","finally","selectedTodo","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.94cec21e.chunk.js","sourcesContent":["export enum TodoStatus {\n  All = 'all',\n  Active = 'active',\n  Complited = 'completed',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodoId: number;\n  setSelectedTodoId: (id: number) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  setSelectedTodoId,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          key={todo.id}\n          data-cy=\"todo\"\n          className={cn(\n            { 'has-background-info-light': todo.id === selectedTodoId },\n          )}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={cn(\n              { 'has-text-success': todo.completed },\n              { 'has-text-danger': !todo.completed },\n            )}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => {\n                setSelectedTodoId(todo.id);\n              }}\n            >\n              <span className=\"icon\">\n                <i className={cn('far',\n                  { 'fa-eye-slash': selectedTodoId === todo.id },\n                  { 'fa-eye': selectedTodoId !== todo.id })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n\n    </tbody>\n  </table>\n);\n","import { TodoStatus } from '../../types/TodoStatus';\n\ninterface Props {\n  query: string;\n  setQuery: (newQuery: string) => void;\n  todoStatusFilter: TodoStatus;\n  setTodoStatusFilter: (status: TodoStatus) => void;\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  todoStatusFilter,\n  setTodoStatusFilter,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={todoStatusFilter}\n          onChange={(event) => {\n            const { value } = event.target;\n\n            if (value !== todoStatusFilter) {\n              setTodoStatusFilter(value as TodoStatus);\n            }\n          }}\n        >\n          {Object.values(TodoStatus).map((status) => (\n            <option key={status} value={status}>\n              {status[0].toUpperCase() + status.slice(1)}\n            </option>\n          ))}\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => setQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ninterface Props {\n  todo: Todo;\n  handleClosing: () => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  handleClosing,\n}) => {\n  const [todoUser, setTodoUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId).then(user => {\n      setTodoUser(user);\n    });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!todoUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleClosing}\n\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className={cn(\n                { 'has-text-success': todo.completed },\n                { 'has-text-danger': !todo.completed },\n              )}\n              >\n                {!todo.completed ? 'Planned' : 'Done'}\n              </strong>\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {todoUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Loader } from './components/Loader';\nimport { TodoModal } from './components/TodoModal';\nimport { TodoStatus } from './types/TodoStatus';\n\nexport const App: React.FC = () => {\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n  const [todoStatusFilter, setTodoStatusFilter] = useState(TodoStatus.All);\n  const [query, setQuery] = useState('');\n  const [error, setError] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n\n  const onTodoModalClose = () => {\n    setSelectedTodoId(0);\n  };\n\n  useEffect(() => {\n    setError(false);\n    setLoading(true);\n\n    getTodos().then(todos => {\n      let filteredTodos = todos;\n\n      switch (todoStatusFilter) {\n        case TodoStatus.All:\n          break;\n\n        case TodoStatus.Active:\n          filteredTodos = filteredTodos.filter(todo => !todo.completed);\n          break;\n\n        case TodoStatus.Complited:\n          filteredTodos = filteredTodos.filter(todo => todo.completed);\n          break;\n\n        default: throw new Error('Wrong todo status');\n      }\n\n      if (query) {\n        const lowerQuery = query.toLowerCase().trim();\n\n        filteredTodos = filteredTodos\n          .filter(todo => todo.title.toLowerCase().includes(lowerQuery));\n      }\n\n      setVisibleTodos(filteredTodos);\n    })\n      .catch(() => setError(true))\n      .finally(() => setLoading(false));\n  }, [todoStatusFilter, query]);\n\n  const selectedTodo = selectedTodoId\n    ? visibleTodos.find(todo => todo.id === selectedTodoId)\n    : null;\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                todoStatusFilter={todoStatusFilter}\n                setTodoStatusFilter={setTodoStatusFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {error && 'Error on loading data from server'}\n\n              {!isLoading && !error\n                ? (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodoId={selectedTodoId}\n                    setSelectedTodoId={setSelectedTodoId}\n                  />\n                )\n                : <Loader /> }\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          handleClosing={onTodoModalClose}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}