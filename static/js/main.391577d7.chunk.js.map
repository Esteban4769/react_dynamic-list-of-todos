{"version":3,"sources":["types/TodoStatus.ts","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoStatus","TodoInfo","todo","isSelected","setSelectedTodoId","id","title","completed","className","cn","type","onClick","TodoList","todos","selectedTodoId","onSelect","map","TodoFilter","query","setQuery","todoStatusFilter","setTodoStatusFilter","value","onChange","event","target","Object","values","status","toUpperCase","slice","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","user","onClose","href","name","App","useState","setTodos","modalUser","setModalUser","All","error","setError","isLoading","setLoading","useEffect","todosFromServer","catch","finally","userId","selectedTodo","find","filteredTodos","filter","Active","Complited","Error","lowerQuery","toLowerCase","trim","includes","getFilteredTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.391577d7.chunk.js","sourcesContent":["export enum TodoStatus {\n  All = 'all',\n  Active = 'active',\n  Complited = 'completed',\n}\n","import cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo;\n  isSelected: boolean;\n  setSelectedTodoId: (todoId: number) => void;\n}\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo,\n  isSelected,\n  setSelectedTodoId,\n}) => {\n  const { id, title, completed } = todo;\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={cn({\n        'has-background-info-light': isSelected,\n      })}\n    >\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        {completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p className={cn(\n          { 'has-text-success': completed },\n          { 'has-text-danger': !completed },\n        )}\n        >\n          {title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => {\n            setSelectedTodoId(id);\n          }}\n        >\n          <span className=\"icon\">\n            <i className={cn('far',\n              { 'fa-eye-slash': isSelected },\n              { 'fa-eye': !isSelected })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodoId: number;\n  onSelect: (id: number) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  onSelect,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n          isSelected={selectedTodoId === todo.id}\n          setSelectedTodoId={onSelect}\n        />\n      ))}\n\n    </tbody>\n  </table>\n);\n","import { TodoStatus } from '../../types/TodoStatus';\n\ninterface Props {\n  query: string;\n  setQuery: (newQuery: string) => void;\n  todoStatusFilter: TodoStatus;\n  setTodoStatusFilter: (status: TodoStatus) => void;\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  todoStatusFilter,\n  setTodoStatusFilter,\n}) => {\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setQuery(value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={todoStatusFilter}\n            onChange={(event) => {\n              const { value } = event.target;\n\n              if (value !== todoStatusFilter) {\n                setTodoStatusFilter(value as TodoStatus);\n              }\n            }}\n          >\n            {Object.values(TodoStatus).map((status) => (\n              <option key={status} value={status}>\n                {status[0].toUpperCase() + status.slice(1)}\n              </option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import cn from 'classnames';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ninterface Props {\n  todo: Todo;\n  user: User,\n  onClose: () => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  user,\n  onClose,\n}) => {\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className={cn(\n                { 'has-text-success': todo.completed },\n                { 'has-text-danger': !todo.completed },\n              )}\n              >\n                {!todo.completed ? 'Planned' : 'Done'}\n              </strong>\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos, getUser } from './api';\nimport { Todo } from './types/Todo';\nimport { Loader } from './components/Loader';\nimport { TodoModal } from './components/TodoModal';\nimport { TodoStatus } from './types/TodoStatus';\nimport { User } from './types/User';\n\nconst getFilteredTodos = (\n  todos: Todo[],\n  filter: TodoStatus,\n  query: string,\n): Todo[] => {\n  let filteredTodos: Todo[] = [];\n\n  switch (filter) {\n    case TodoStatus.All:\n      filteredTodos = todos;\n      break;\n\n    case TodoStatus.Active:\n      filteredTodos = todos.filter(todo => !todo.completed);\n      break;\n\n    case TodoStatus.Complited:\n      filteredTodos = todos.filter(todo => todo.completed);\n      break;\n\n    default: throw new Error('Wrong todo status');\n  }\n\n  if (query) {\n    const lowerQuery = query.toLowerCase().trim();\n\n    filteredTodos = filteredTodos.filter(({ title }) => (\n      title.toLowerCase().includes(lowerQuery)\n    ));\n  }\n\n  return filteredTodos;\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n  const [modalUser, setModalUser] = useState<User | null>(null);\n  const [todoStatusFilter, setTodoStatusFilter] = useState(TodoStatus.All);\n  const [query, setQuery] = useState('');\n  const [error, setError] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n\n  const onTodoModalClose = () => {\n    setSelectedTodoId(0);\n  };\n\n  useEffect(() => {\n    setError(false);\n    setLoading(true);\n\n    getTodos()\n      .then(todosFromServer => {\n        setTodos(todosFromServer);\n      })\n      .catch(() => setError(true))\n      .finally(() => setLoading(false));\n  }, []);\n\n  useEffect(() => {\n    const selectedTodo = todos.find(todo => todo.id === selectedTodoId);\n\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then(user => {\n          setModalUser(user);\n        });\n    }\n  }, [selectedTodoId]);\n\n  const filteredTodos = getFilteredTodos(todos, todoStatusFilter, query);\n\n  const selectedTodo = selectedTodoId\n    ? filteredTodos.find(todo => todo.id === selectedTodoId)\n    : null;\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                todoStatusFilter={todoStatusFilter}\n                setTodoStatusFilter={setTodoStatusFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {error && 'Error on loading data from server'}\n\n              {!isLoading && !error\n                ? (\n                  <TodoList\n                    todos={filteredTodos}\n                    selectedTodoId={selectedTodoId}\n                    onSelect={setSelectedTodoId}\n                  />\n                )\n                : <Loader /> }\n            </div>\n          </div>\n        </div>\n      </div>\n      {(selectedTodo && modalUser) && (\n        <TodoModal\n          todo={selectedTodo}\n          user={modalUser}\n          onClose={onTodoModalClose}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}